var dsads=function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n),t.d(n,"la",(function(){return l})),t.d(n,"snooze",(function(){return f})),t.d(n,"loadUrl",(function(){return p})),t.d(n,"close",(function(){return v}));var r=t(1),o=t(3),{config:i}=t(2);const a={};let c;const u="1",d={id:"designstripe",path:"/",html:"<style>.bm-better-metter-holder{all:unset}@media screen and (max-width:600px){.bm-better-metter-holder{visibility:hidden;display:none}.bm-bt-close{visibility:hidden;display:none}}.bm-better-metter-holder{font-family:Arial,sans-serif;position:static;left:20px;bottom:20px;padding:5px;border-radius:20px;cursor:pointer}.bm-better-metter-holder:hover{background-color:#f9f9f9}.bm-better-meter{position:fixed;left:20px;bottom:20px;z-index:999999;display:-ms-grid;display:grid;justify-items:end;grid-auto-columns:1fr;grid-column-gap:16px;grid-row-gap:8px;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto auto;grid-template-rows:auto auto}.bm-shadow{box-shadow:6px 6px 30px -7px rgba(0,0,0,.21)}.ds-overlay-button{display:inline-block;padding:10px 20px;border-radius:14px;background-color:#6dd0fe;font-family:Arial,\"Helvetica Neue\",Helvetica,sans-serif;font-size:12px;line-height:20px;font-weight:700;text-decoration:none;color:#391145}.bm-bt-close{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:30px;height:30px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;border-radius:20px;text-decoration:none;font-family:Arial,sans-serif;background-color:#fff;cursor:pointer;opacity:.2}.callout{width:300px}</style><div id=ds-callout class=bm-better-meter onclick='document.location=\"https://designstripe.com\"'><a data-dsads-action=close data-dsads-close-container-id=ds-callout class=\"bm-bt-close bm-shadow\">X</a><div onclick=dsads.loadUrl(this) class=\"bm-link-wrapper bm-better-metter-holder\"><img class=callout src=https://ds-blog-assets.s3.amazonaws.com/ds_callout1.png></div></div>"};function s(){const e=window.location.hostname.split("."),n=JSON.parse("[{\"id\":\"neuebel.com\",\"hosts\":[\"neuebel.com\"]},{\"id\":\"designvalley.club\",\"hosts\":[\"designvalley.club\"]},{\"id\":\"wireframer.art\",\"hosts\":[\"wireframer.art\"]},{\"id\":\"glyphy.io\",\"hosts\":[\"glyphy.io\"]},{\"id\":\"drawkit.com\",\"hosts\":[\"drawkit.com\"]},{\"id\":\"www.angelsofmany.com\",\"hosts\":[\"www.angelsofmany.com\"]},{\"id\":\"growwwkit.com\",\"hosts\":[\"growwwkit.com\"]},{\"id\":\"coolbackgrounds.io\",\"hosts\":[\"coolbackgrounds.io\"]},{\"id\":\"cssgradient.io\",\"hosts\":[\"cssgradient.io\"]}]").find(n=>{for(let t=e.length;t>=1;t-=1)if(n.hosts.includes(e.slice(-t).join(".")))return!0});return n?n.id:null}function l(e){const n=function(e){const n=e.match(/(BM-([0-9]{4})-([0-9]{5}))|([1-9][0-9]{8})/);return null!==n&&(4 in n&&void 0!==n[4]?n[4]:`${n[2]}${n[3]}`)}(e);document.addEventListener("campaign_loaded",e=>{if(a.campaignLoadEvent){const e=window.setInterval(()=>{c.readyState===WebSocket.OPEN&&(c.send(JSON.stringify(a.campaignLoadEvent)),clearInterval(e))},200)}document.querySelectorAll("[data-dsads-action]").forEach(e=>{if(e.getAttribute("data-dsads-close-container-id")){f(3);const n=e.getAttribute("data-dsads-close-container-id");e.addEventListener("click",e=>{e.stopPropagation(),e.preventDefault(),document.getElementById(n).style.visibility="hidden"})}else console.log("No data-dsads-close-container-id container attribute found ")})}),function(){if(""==d.id||null==d.id)return void console.log("No campaign set. Will not display.");if(r.get(d.id+"_snooze"))console.log(`Cookie found for campaign ${d.id} on current path. Will not display.`);else{const e=isNaN(parseInt(u))?0:1e3*parseInt(u);console.log(`Displaying campaign ${d.id}. Delay ${parseInt(u)} seconds`),window.setTimeout(()=>{document.body.insertAdjacentHTML("beforeend",d.html),document.dispatchEvent(new Event("campaign_loaded"))},e)}}(),function(e){const n=i.websocket,t=s(),u=new WebSocket(n);c=u;let d={},l=r.get("dstid");void 0===l&&(l=o.v4(),r.set("dstid",l,{expires:730}));const f={wid:e,eventType:"pageLoad",uid:null,url:document.location.href,ref:document.referrer,dom:document.location.hostname,ua:window.navigator.userAgent,tid:l,sid:t};a.campaignLoadEvent={wid:e,eventType:"campaignLoad",uid:null,url:document.location.href,dom:document.location.hostname,cid:"designstripe",cv:"cmp_Pa7lFZeoCKIKpiY0qmSGp",tid:l,sid:t},a.campaignClickEvent={wid:e,eventType:"campaignClick",uid:null,url:document.location.href,dom:document.location.hostname,cid:"designstripe",cv:"cmp_Pa7lFZeoCKIKpiY0qmSGp",tid:l,sid:t},window.setInterval(()=>{u.send(JSON.stringify({wid:e,eventType:"ping",tsc:(new Date).getTime(),url:document.location.href,hostname:document.location.hostname,tid:l}))},2e4),window.addEventListener("click",e=>(d=e.target,!0)),u.addEventListener("open",e=>{u.send(JSON.stringify(f))}),window.addEventListener("beforeunload",n=>{const r=d&&"href"in d?d.href:null,o={wid:e,eventType:"pageUnload",uid:null,url:document.location.href,nextTarget:r,ua:window.navigator.userAgent,tid:l,sid:t};u.send(JSON.stringify(o))})}(n)}function f(e){console.log(`Setting expiry cookie for campaign: ${d.id}, path: ${d.path}, days: ${e}`);const n={path:d.path};e&&(n.expires=e),r.set("designstripe_snooze",!0,n)}function p(e){var n=(e=e||window.event).target||e.srcElement||e;let t;3==n.nodeType&&(n=n.parentNode);try{t=new URL(e.href),console.log(t),t.searchParams.append("dscid",d.id),t.searchParams.append("dsref",window.location.hostname),a.campaignClickEvent.clickurl=t.toString()}catch(e){console.log("Error: Could not append dscid & dsref",e)}return c&&c.send(JSON.stringify(a.campaignClickEvent)),window.event.returnValue=!1,t&&window.open(t.toString(),"_self"),!1}function v(e){console.log(e),console.log("element",document.getElementById(e)),console.log("display",document.getElementById(e).style.display),document.getElementById(e).style.visibility="hidden"}},function(e,n,t){var r,o;
/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */!function(i){if(void 0===(o="function"==typeof(r=i)?r.call(n,t,n,e):r)||(e.exports=o),!0,e.exports=i(),!!0){var a=window.Cookies,c=window.Cookies=i();c.noConflict=function(){return window.Cookies=a,c}}}((function(){function e(){for(var e=0,n={};e<arguments.length;e++){var t=arguments[e];for(var r in t)n[r]=t[r]}return n}function n(e){return e.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}return function t(r){function o(){}function i(n,t,i){if("undefined"!=typeof document){"number"==typeof(i=e({path:"/"},o.defaults,i)).expires&&(i.expires=new Date(1*new Date+864e5*i.expires)),i.expires=i.expires?i.expires.toUTCString():"";try{var a=JSON.stringify(t);/^[\{\[]/.test(a)&&(t=a)}catch(e){}t=r.write?r.write(t,n):encodeURIComponent(String(t)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),n=encodeURIComponent(String(n)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var c="";for(var u in i)i[u]&&(c+="; "+u,!0!==i[u]&&(c+="="+i[u].split(";")[0]));return document.cookie=n+"="+t+c}}function a(e,t){if("undefined"!=typeof document){for(var o={},i=document.cookie?document.cookie.split("; "):[],a=0;a<i.length;a++){var c=i[a].split("="),u=c.slice(1).join("=");t||'"'!==u.charAt(0)||(u=u.slice(1,-1));try{var d=n(c[0]);if(u=(r.read||r)(u,d)||n(u),t)try{u=JSON.parse(u)}catch(e){}if(o[d]=u,e===d)break}catch(e){}}return e?o[e]:o}}return o.set=i,o.get=function(e){return a(e,!1)},o.getJSON=function(e){return a(e,!0)},o.remove=function(n,t){i(n,"",e(t,{expires:-1}))},o.defaults={},o.withConverter=t,o}((function(){}))}))},function(e,n){e.exports={config:{websocket:"wss://ws-dev.bettermeter.com/"}}},function(e,n,t){"use strict";t.r(n),t.d(n,"v1",(function(){return g})),t.d(n,"v3",(function(){return S})),t.d(n,"v4",(function(){return N})),t.d(n,"v5",(function(){return M})),t.d(n,"NIL",(function(){return x})),t.d(n,"version",(function(){return D})),t.d(n,"validate",(function(){return c})),t.d(n,"stringify",(function(){return f})),t.d(n,"parse",(function(){return m}));var r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),o=new Uint8Array(16);function i(){if(!r)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}var a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var c=function(e){return"string"==typeof e&&a.test(e)},u=[],d=0;d<256;++d)u.push((d+256).toString(16).substr(1));var s,l,f=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(u[e[n+0]]+u[e[n+1]]+u[e[n+2]]+u[e[n+3]]+"-"+u[e[n+4]]+u[e[n+5]]+"-"+u[e[n+6]]+u[e[n+7]]+"-"+u[e[n+8]]+u[e[n+9]]+"-"+u[e[n+10]]+u[e[n+11]]+u[e[n+12]]+u[e[n+13]]+u[e[n+14]]+u[e[n+15]]).toLowerCase();if(!c(t))throw TypeError("Stringified UUID is invalid");return t},p=0,v=0;var g=function(e,n,t){var r=n&&t||0,o=n||new Array(16),a=(e=e||{}).node||s,c=void 0!==e.clockseq?e.clockseq:l;if(null==a||null==c){var u=e.random||(e.rng||i)();null==a&&(a=s=[1|u[0],u[1],u[2],u[3],u[4],u[5]]),null==c&&(c=l=16383&(u[6]<<8|u[7]))}var d=void 0!==e.msecs?e.msecs:Date.now(),g=void 0!==e.nsecs?e.nsecs:v+1,m=d-p+(g-v)/1e4;if(m<0&&void 0===e.clockseq&&(c=c+1&16383),(m<0||d>p)&&void 0===e.nsecs&&(g=0),g>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");p=d,v=g,l=c;var y=(1e4*(268435455&(d+=122192928e5))+g)%4294967296;o[r++]=y>>>24&255,o[r++]=y>>>16&255,o[r++]=y>>>8&255,o[r++]=255&y;var h=d/4294967296*1e4&268435455;o[r++]=h>>>8&255,o[r++]=255&h,o[r++]=h>>>24&15|16,o[r++]=h>>>16&255,o[r++]=c>>>8|128,o[r++]=255&c;for(var w=0;w<6;++w)o[r+w]=a[w];return n||f(o)};var m=function(e){if(!c(e))throw TypeError("Invalid UUID");var n,t=new Uint8Array(16);return t[0]=(n=parseInt(e.slice(0,8),16))>>>24,t[1]=n>>>16&255,t[2]=n>>>8&255,t[3]=255&n,t[4]=(n=parseInt(e.slice(9,13),16))>>>8,t[5]=255&n,t[6]=(n=parseInt(e.slice(14,18),16))>>>8,t[7]=255&n,t[8]=(n=parseInt(e.slice(19,23),16))>>>8,t[9]=255&n,t[10]=(n=parseInt(e.slice(24,36),16))/1099511627776&255,t[11]=n/4294967296&255,t[12]=n>>>24&255,t[13]=n>>>16&255,t[14]=n>>>8&255,t[15]=255&n,t};var y=function(e,n,t){function r(e,r,o,i){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var n=[],t=0;t<e.length;++t)n.push(e.charCodeAt(t));return n}(e)),"string"==typeof r&&(r=m(r)),16!==r.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var a=new Uint8Array(16+e.length);if(a.set(r),a.set(e,r.length),(a=t(a))[6]=15&a[6]|n,a[8]=63&a[8]|128,o){i=i||0;for(var c=0;c<16;++c)o[i+c]=a[c];return o}return f(a)}try{r.name=e}catch(e){}return r.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",r.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",r};function h(e){return 14+(e+64>>>9<<4)+1}function w(e,n){var t=(65535&e)+(65535&n);return(e>>16)+(n>>16)+(t>>16)<<16|65535&t}function I(e,n,t,r,o,i){return w((a=w(w(n,e),w(r,i)))<<(c=o)|a>>>32-c,t);var a,c}function A(e,n,t,r,o,i,a){return I(n&t|~n&r,e,n,o,i,a)}function b(e,n,t,r,o,i,a){return I(n&r|t&~r,e,n,o,i,a)}function C(e,n,t,r,o,i,a){return I(n^t^r,e,n,o,i,a)}function E(e,n,t,r,o,i,a){return I(t^(n|~r),e,n,o,i,a)}var S=y("v3",48,(function(e){if("string"==typeof e){var n=unescape(encodeURIComponent(e));e=new Uint8Array(n.length);for(var t=0;t<n.length;++t)e[t]=n.charCodeAt(t)}return function(e){for(var n=[],t=32*e.length,r=0;r<t;r+=8){var o=e[r>>5]>>>r%32&255,i=parseInt("0123456789abcdef".charAt(o>>>4&15)+"0123456789abcdef".charAt(15&o),16);n.push(i)}return n}(function(e,n){e[n>>5]|=128<<n%32,e[h(n)-1]=n;for(var t=1732584193,r=-271733879,o=-1732584194,i=271733878,a=0;a<e.length;a+=16){var c=t,u=r,d=o,s=i;t=A(t,r,o,i,e[a],7,-680876936),i=A(i,t,r,o,e[a+1],12,-389564586),o=A(o,i,t,r,e[a+2],17,606105819),r=A(r,o,i,t,e[a+3],22,-1044525330),t=A(t,r,o,i,e[a+4],7,-176418897),i=A(i,t,r,o,e[a+5],12,1200080426),o=A(o,i,t,r,e[a+6],17,-1473231341),r=A(r,o,i,t,e[a+7],22,-45705983),t=A(t,r,o,i,e[a+8],7,1770035416),i=A(i,t,r,o,e[a+9],12,-1958414417),o=A(o,i,t,r,e[a+10],17,-42063),r=A(r,o,i,t,e[a+11],22,-1990404162),t=A(t,r,o,i,e[a+12],7,1804603682),i=A(i,t,r,o,e[a+13],12,-40341101),o=A(o,i,t,r,e[a+14],17,-1502002290),r=A(r,o,i,t,e[a+15],22,1236535329),t=b(t,r,o,i,e[a+1],5,-165796510),i=b(i,t,r,o,e[a+6],9,-1069501632),o=b(o,i,t,r,e[a+11],14,643717713),r=b(r,o,i,t,e[a],20,-373897302),t=b(t,r,o,i,e[a+5],5,-701558691),i=b(i,t,r,o,e[a+10],9,38016083),o=b(o,i,t,r,e[a+15],14,-660478335),r=b(r,o,i,t,e[a+4],20,-405537848),t=b(t,r,o,i,e[a+9],5,568446438),i=b(i,t,r,o,e[a+14],9,-1019803690),o=b(o,i,t,r,e[a+3],14,-187363961),r=b(r,o,i,t,e[a+8],20,1163531501),t=b(t,r,o,i,e[a+13],5,-1444681467),i=b(i,t,r,o,e[a+2],9,-51403784),o=b(o,i,t,r,e[a+7],14,1735328473),r=b(r,o,i,t,e[a+12],20,-1926607734),t=C(t,r,o,i,e[a+5],4,-378558),i=C(i,t,r,o,e[a+8],11,-2022574463),o=C(o,i,t,r,e[a+11],16,1839030562),r=C(r,o,i,t,e[a+14],23,-35309556),t=C(t,r,o,i,e[a+1],4,-1530992060),i=C(i,t,r,o,e[a+4],11,1272893353),o=C(o,i,t,r,e[a+7],16,-155497632),r=C(r,o,i,t,e[a+10],23,-1094730640),t=C(t,r,o,i,e[a+13],4,681279174),i=C(i,t,r,o,e[a],11,-358537222),o=C(o,i,t,r,e[a+3],16,-722521979),r=C(r,o,i,t,e[a+6],23,76029189),t=C(t,r,o,i,e[a+9],4,-640364487),i=C(i,t,r,o,e[a+12],11,-421815835),o=C(o,i,t,r,e[a+15],16,530742520),r=C(r,o,i,t,e[a+2],23,-995338651),t=E(t,r,o,i,e[a],6,-198630844),i=E(i,t,r,o,e[a+7],10,1126891415),o=E(o,i,t,r,e[a+14],15,-1416354905),r=E(r,o,i,t,e[a+5],21,-57434055),t=E(t,r,o,i,e[a+12],6,1700485571),i=E(i,t,r,o,e[a+3],10,-1894986606),o=E(o,i,t,r,e[a+10],15,-1051523),r=E(r,o,i,t,e[a+1],21,-2054922799),t=E(t,r,o,i,e[a+8],6,1873313359),i=E(i,t,r,o,e[a+15],10,-30611744),o=E(o,i,t,r,e[a+6],15,-1560198380),r=E(r,o,i,t,e[a+13],21,1309151649),t=E(t,r,o,i,e[a+4],6,-145523070),i=E(i,t,r,o,e[a+11],10,-1120210379),o=E(o,i,t,r,e[a+2],15,718787259),r=E(r,o,i,t,e[a+9],21,-343485551),t=w(t,c),r=w(r,u),o=w(o,d),i=w(i,s)}return[t,r,o,i]}(function(e){if(0===e.length)return[];for(var n=8*e.length,t=new Uint32Array(h(n)),r=0;r<n;r+=8)t[r>>5]|=(255&e[r/8])<<r%32;return t}(e),8*e.length))}));var N=function(e,n,t){var r=(e=e||{}).random||(e.rng||i)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,n){t=t||0;for(var o=0;o<16;++o)n[t+o]=r[o];return n}return f(r)};function U(e,n,t,r){switch(e){case 0:return n&t^~n&r;case 1:return n^t^r;case 2:return n&t^n&r^t&r;case 3:return n^t^r}}function k(e,n){return e<<n|e>>>32-n}var M=y("v5",80,(function(e){var n=[1518500249,1859775393,2400959708,3395469782],t=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var r=unescape(encodeURIComponent(e));e=[];for(var o=0;o<r.length;++o)e.push(r.charCodeAt(o))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var i=e.length/4+2,a=Math.ceil(i/16),c=new Array(a),u=0;u<a;++u){for(var d=new Uint32Array(16),s=0;s<16;++s)d[s]=e[64*u+4*s]<<24|e[64*u+4*s+1]<<16|e[64*u+4*s+2]<<8|e[64*u+4*s+3];c[u]=d}c[a-1][14]=8*(e.length-1)/Math.pow(2,32),c[a-1][14]=Math.floor(c[a-1][14]),c[a-1][15]=8*(e.length-1)&4294967295;for(var l=0;l<a;++l){for(var f=new Uint32Array(80),p=0;p<16;++p)f[p]=c[l][p];for(var v=16;v<80;++v)f[v]=k(f[v-3]^f[v-8]^f[v-14]^f[v-16],1);for(var g=t[0],m=t[1],y=t[2],h=t[3],w=t[4],I=0;I<80;++I){var A=Math.floor(I/20),b=k(g,5)+U(A,m,y,h)+w+n[A]+f[I]>>>0;w=h,h=y,y=k(m,30)>>>0,m=g,g=b}t[0]=t[0]+g>>>0,t[1]=t[1]+m>>>0,t[2]=t[2]+y>>>0,t[3]=t[3]+h>>>0,t[4]=t[4]+w>>>0}return[t[0]>>24&255,t[0]>>16&255,t[0]>>8&255,255&t[0],t[1]>>24&255,t[1]>>16&255,t[1]>>8&255,255&t[1],t[2]>>24&255,t[2]>>16&255,t[2]>>8&255,255&t[2],t[3]>>24&255,t[3]>>16&255,t[3]>>8&255,255&t[3],t[4]>>24&255,t[4]>>16&255,t[4]>>8&255,255&t[4]]})),x="00000000-0000-0000-0000-000000000000";var D=function(e){if(!c(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,